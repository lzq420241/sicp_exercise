#lang sicp
(#%require (only racket provide))
(provide sum-re)
(provide sum-it)

(provide sum-it)

(define (sum-it term a next b)
  (define (iter a result)
      (if (> a b)
      result
      (iter (next a) (+ result (term a)))))
  (iter a 0))

(define (sum-re term a next b)
  (if (> a b)
      0
      (+ (term a)
         (sum-re term (next a) next b))))
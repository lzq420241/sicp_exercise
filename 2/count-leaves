 #lang sicp
(#%require "accumulate-n")

(define (count-leaves t)
  (accumulate +
              0
              (map (lambda (x) (if (pair? x)
                                   (count-leaves x)
                                   1)) t)))

(define t (list 1 (list 2 (list 3 4)) 5))
(count-leaves t)


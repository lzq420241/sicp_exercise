#lang sicp
(#%require "print-list")
(define (square x) (* x x))

(define (square-list items)
  (if (null? items)
      nil
      (cons (square (car items))
            (square-list (cdr items)))))

(define (square-list-m items)
  (map square items))
  
(print-list (square-list (list 1 2 3 4)))
(print-list (square-list-m (list 1 2 3 4)))
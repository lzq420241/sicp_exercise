#lang sicp

(define (same-parity x . w)
  (define (same-parity-iter items)
    (if (null? items)
        nil
        (if (= (remainder (car items) 2) (remainder x 2))
            (cons (car items) (same-parity-iter (cdr items)))
            (same-parity-iter (cdr items)))))
  (cons x (same-parity-iter w)))

(same-parity 1 2 3 4 5 6 7)

(same-parity 2 3 4 5 6 7)